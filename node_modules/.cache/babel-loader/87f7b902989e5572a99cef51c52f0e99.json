{"ast":null,"code":"var _jsxFileName = \"/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = useRef(); // State for storing messages and current message\n\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\"); // Function to send a message\n\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.current.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\"); // ://incredible-mabelle-abelananta-405d7d10.koyeb.app\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.current.on(\"message\", message => {\n      console.log(socket.current.id);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbox ${socket.current.id === message.user ? \"current\" : \"\"}`,\n          children: [socket.current.id === message.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: message.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: currentMessage.message,\n          onChange: e => setCurrentMessage(e.target.value),\n          required: true,\n          className: \"input-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oGMqoxdwiHCLDIAmBgIKrr/yFJs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","current","emit","on","console","log","message","id","prevMessages","map","index","user","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.current.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n\n    // ://incredible-mabelle-abelananta-405d7d10.koyeb.app\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.current.on(\"message\", (message) => {\n      console.log(socket.current.id);\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-wrapper\">\n        <div className=\"messages\">\n          {messages.map((message, index) => (\n            <div\n              className={`chatbox ${\n                socket.current.id === message.user ? \"current\" : \"\"\n              }`}\n            >\n              {socket.current.id === message.user ? (\n                <div className=\"username\">{message.user}</div>\n              ) : null}\n              <div key={index} className=\"message\">\n                {message.message}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            value={currentMessage.message}\n            onChange={(e) => setCurrentMessage(e.target.value)}\n            required\n            className=\"input-message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}