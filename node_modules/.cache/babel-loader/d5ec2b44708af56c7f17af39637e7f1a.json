{"ast":null,"code":"import{useEffect,useRef,useState}from\"react\";import\"./App.css\";import{io}from\"socket.io-client\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const socket=useRef();// State for storing messages and current message\nconst[messages,setMessages]=useState([]);const[currentMessage,setCurrentMessage]=useState('');// Function to send a message\nconst sendMessage=()=>{if(currentMessage){socket.emit('message',currentMessage);setCurrentMessage('');}};useEffect(()=>{socket.current=io(\"ws://localhost:9013\");socket.current.on(\"connnection\",()=>{console.log(\"connected to server\");});},[]);useEffect(()=>{// Listen for incoming messages\nsocket.on('message',message=>{setMessages(prevMessages=>[...prevMessages,message]);});},[]);const handleClick=()=>{socket.current.emit(\"message\",new Date().getTime());};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:message},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type a message...\",value:currentMessage,onChange:e=>setCurrentMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]});}export default App;","map":{"version":3,"sources":["/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","emit","current","on","console","log","message","prevMessages","handleClick","Date","getTime","map","index","e","target","value"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAO,WAAP,CAEA,OAASC,EAAT,KAAmB,kBAAnB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,KAAMC,CAAAA,MAAM,CAAGJ,MAAM,EAArB,CACA;AACA,KAAM,CAACK,QAAD,CAAWC,WAAX,EAA0BL,QAAQ,CAAC,EAAD,CAAxC,CACA,KAAM,CAACM,cAAD,CAAiBC,iBAAjB,EAAsCP,QAAQ,CAAC,EAAD,CAApD,CACA;AACA,KAAMQ,CAAAA,WAAW,CAAG,IAAM,CACxB,GAAIF,cAAJ,CAAoB,CAClBH,MAAM,CAACM,IAAP,CAAY,SAAZ,CAAuBH,cAAvB,EACAC,iBAAiB,CAAC,EAAD,CAAjB,CACD,CACF,CALD,CAOAT,SAAS,CAAC,IAAM,CACdK,MAAM,CAACO,OAAP,CAAiBT,EAAE,CAAC,qBAAD,CAAnB,CAEAE,MAAM,CAACO,OAAP,CAAeC,EAAf,CAAkB,aAAlB,CAAiC,IAAM,CACrCC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACD,CAFD,EAGD,CANQ,CAMN,EANM,CAAT,CAQAf,SAAS,CAAC,IAAM,CACd;AACAK,MAAM,CAACQ,EAAP,CAAU,SAAV,CAAsBG,OAAD,EAAa,CAChCT,WAAW,CAAEU,YAAD,EAAkB,CAAC,GAAGA,YAAJ,CAAkBD,OAAlB,CAAnB,CAAX,CACD,CAFD,EAGD,CALQ,CAKN,EALM,CAAT,CAOA,KAAME,CAAAA,WAAW,CAAG,IAAM,CACxBb,MAAM,CAACO,OAAP,CAAeD,IAAf,CAAoB,SAApB,CAA+B,GAAIQ,CAAAA,IAAJ,GAAWC,OAAX,EAA/B,EACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,UAAf,UACGd,QAAQ,CAACe,GAAT,CAAa,CAACL,OAAD,CAAUM,KAAV,gBACZ,YAAiB,SAAS,CAAC,SAA3B,UACGN,OADH,EAAUM,KAAV,CADD,CADH,EADF,cAQE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,mBAFd,CAGE,KAAK,CAAEd,cAHT,CAIE,QAAQ,CAAGe,CAAD,EAAOd,iBAAiB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAJpC,EARF,cAcE,eAAQ,OAAO,CAAEf,WAAjB,kBAdF,GADF,CAmBD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit('message', currentMessage);\n      setCurrentMessage('');\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleClick = () => {\n    socket.current.emit(\"message\", new Date().getTime());\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type a message...\"\n        value={currentMessage}\n        onChange={(e) => setCurrentMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}