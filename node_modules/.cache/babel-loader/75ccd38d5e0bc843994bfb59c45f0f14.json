{"ast":null,"code":"var _jsxFileName = \"/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = useRef(); // State for storing messages and current message\n\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(''); // Function to send a message\n\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit('message', currentMessage);\n      setCurrentMessage('');\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleClick = () => {\n    socket.current.emit(\"message\", new Date().getTime());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: currentMessage,\n      onChange: e => setCurrentMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MJQuDHvkJc8s6xS5Vpp04kxyZYU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","emit","current","on","console","log","message","prevMessages","handleClick","Date","getTime","map","index","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGJ,MAAM,EAArB,CADa,CAEb;;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD,CAJa,CAKb;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIF,cAAJ,EAAoB;AAClBH,MAAAA,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBH,cAAvB;AACAC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AACF,GALD;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACO,OAAP,GAAiBT,EAAE,CAAC,qBAAD,CAAnB;AAEAE,IAAAA,MAAM,CAACO,OAAP,CAAeC,EAAf,CAAkB,aAAlB,EAAiC,MAAM;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAsBG,OAAD,IAAa;AAChCT,MAAAA,WAAW,CAAEU,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBD,OAAlB,CAAnB,CAAX;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAME,WAAW,GAAG,MAAM;AACxBb,IAAAA,MAAM,CAACO,OAAP,CAAeD,IAAf,CAAoB,SAApB,EAA+B,IAAIQ,IAAJ,GAAWC,OAAX,EAA/B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGd,QAAQ,CAACe,GAAT,CAAa,CAACL,OAAD,EAAUM,KAAV,kBACZ;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA,kBACGN;AADH,SAAUM,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,KAAK,EAAEd,cAHT;AAIE,MAAA,QAAQ,EAAGe,CAAD,IAAOd,iBAAiB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJpC;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAQ,MAAA,OAAO,EAAEf,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAnDQN,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit('message', currentMessage);\n      setCurrentMessage('');\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleClick = () => {\n    socket.current.emit(\"message\", new Date().getTime());\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type a message...\"\n        value={currentMessage}\n        onChange={(e) => setCurrentMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}