{"ast":null,"code":"var _jsxFileName = \"/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = useRef(); // State for storing messages and current message\n\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\"); // Function to send a message\n\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.current.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.current.on(\"message\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: currentMessage.message,\n        onChange: e => setCurrentMessage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oGMqoxdwiHCLDIAmBgIKrr/yFJs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abelananta/Coding/simple-react-socket-io/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","current","emit","on","console","log","message","prevMessages","map","index","user","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGJ,MAAM,EAArB,CADa,CAEb;;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD,CAJa,CAKb;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIF,cAAJ,EAAoB;AAClBH,MAAAA,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoB,SAApB,EAA+BJ,cAA/B;AACAC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AACF,GALD;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACM,OAAP,GAAiBR,EAAE,CAAC,qBAAD,CAAnB;AAEAE,IAAAA,MAAM,CAACM,OAAP,CAAeE,EAAf,CAAkB,aAAlB,EAAiC,MAAM;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,MAAM,CAACM,OAAP,CAAeE,EAAf,CAAkB,SAAlB,EAA8BG,OAAD,IAAa;AACxCT,MAAAA,WAAW,CAAEU,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBD,OAAlB,CAAnB,CAAX;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGV,QAAQ,CAACY,GAAT,CAAa,CAACF,OAAD,EAAUG,KAAV,kBACZ;AAAA,kCACE;AAAA,sBAAMH,OAAO,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAiB,YAAA,SAAS,EAAC,SAA3B;AAAA,sBACGJ,OAAO,CAACA;AADX,aAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,mBAFd;AAGE,QAAA,KAAK,EAAEX,cAAc,CAACQ,OAHxB;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOZ,iBAAiB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAJpC;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAQ,QAAA,OAAO,EAAEb,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GApDQN,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.current.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9013\");\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.current.on(\"message\", (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-wrapper\">\n        <div className=\"messages\">\n          {messages.map((message, index) => (\n            <>\n              <div>{message.user}</div>\n              <div key={index} className=\"message\">\n                {message.message}\n              </div>\n            </>\n          ))}\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={currentMessage.message}\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          required\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}